package com.wilamare.homesolar.presentation.statistic

import android.annotation.SuppressLint
import androidx.compose.runtime.State
import androidx.compose.runtime.mutableStateOf
import androidx.lifecycle.ViewModel
import com.wilamare.homesolar.presentation.common.ChartData
import com.wilamare.homesolar.presentation.common.ChartDataset
import com.wilamare.homesolar.presentation.setting.SettingViewModel
import dagger.hilt.android.lifecycle.HiltViewModel
import kotlinx.coroutines.flow.MutableSharedFlow
import kotlinx.coroutines.flow.asSharedFlow
import java.text.SimpleDateFormat
import java.util.*
import javax.inject.Inject
import kotlin.random.Random

@SuppressLint("SimpleDateFormat")
@HiltViewModel
class StatisticViewModel @Inject constructor(

) : ViewModel() {
    sealed class UIEvent {
        data class ShowSnackbar(val message: String) : UIEvent()
    }

    private val _eventFlow = MutableSharedFlow<SettingViewModel.UIEvent>()
    val eventFlow = _eventFlow.asSharedFlow()

    private val _state = mutableStateOf(StatisticState())
    val state: State<StatisticState> = _state

    private val _chartState = mutableStateOf(StatisticChartState())
    val chartState: State<StatisticChartState> = _chartState

    private fun setChartType(type: ChartType) {
        _chartState.value = chartState.value.copy(chartType = type)
    }

    fun getDataTotalValue(): String {
        return "7.12 kWh"
    }

    fun getDataDescription(): String {
        return when (state.value.selectedData) {
            StatisticData.HOME ->
                "Home Usage"
            StatisticData.SOLAR ->
                "Solar Generation"
            StatisticData.BATTERY ->
                "Battery Discharge"
            StatisticData.INVERTER ->
                "Inverter Generation"
            StatisticData.GRID ->
                "Net Grid Use"
        }

    }

    fun getChartDatasets(): List<ChartDataset> {
        return when (state.value.selectedData) {
            StatisticData.HOME ->
                listOf(
                    ChartDataset(name = StatisticData.HOME, points = getDataPoints())
                )
            StatisticData.SOLAR ->
                listOf(
                    ChartDataset(name = StatisticData.SOLAR, points = getDataPoints())
                )
            StatisticData.BATTERY ->
                listOf(
                    ChartDataset(name = StatisticData.BATTERY, points = getDataPoints())
                )
            StatisticData.INVERTER ->
                listOf(
                    ChartDataset(name = StatisticData.INVERTER, points = getDataPoints())
                )
            StatisticData.GRID ->
                listOf(
                    ChartDataset(name = StatisticData.GRID, points = getDataPoints())
                )
        }
    }

    fun setTimescale(timescale: Timescale) {
        when (timescale) {
            Timescale.DAY ->
                setChartType(ChartType.LINE)
            else ->
                setChartType(ChartType.BAR)
        }
        _state.value = state.value.copy(timescale = timescale)
    }

    fun setSelectedData(data: StatisticData) {
        _state.value = state.value.copy(selectedData = data)
    }

    fun getSelectedDateString(): String {
        val formatter = when(state.value.timescale){
            Timescale.DAY ->
                SimpleDateFormat("EE, dd MMM yyyy")
            Timescale.MONTH ->
                SimpleDateFormat("MMM yyyy")
            Timescale.YEAR ->
                SimpleDateFormat("yyyy")
        }
        return formatter.format(state.value.selectedDate)
    }

    fun getFormatter():SimpleDateFormat{
        return when(state.value.timescale){
            Timescale.MONTH ->
                SimpleDateFormat("dd")
            else ->
                SimpleDateFormat("MMM")
        }
    }

    fun getSelectedBarDate():String{
        return when(state.value.timescale){
            Timescale.MONTH ->
                {
                    SimpleDateFormat("EE, dd MMM yyyy").format(Date(chartState.value.selectedPoint.timestamp))
                }
            else ->
                {
                    SimpleDateFormat("MMM yyyy").format(Date(chartState.value.selectedPoint.timestamp))
                }
        }
    }

    fun setSelectedPoint(chartData: ChartData){
        _chartState.value = chartState.value.copy(selectedPoint = chartData)
    }
    fun toggleAggregated() {
        _chartState.value = chartState.value.copy(isAggregated = !chartState.value.isAggregated)
    }

    fun setDateSelected(timestamp: Long?){
        timestamp?.let {
            _state.value = state.value.copy(selectedDate = Date(it))
        }
    }

    fun setDateSelected(day:String = "01", month:String = "JAN", year:String ="1970"){
        val date = SimpleDateFormat("dd/MMM/yyyy").parse("$day/$month/$year")
        date?.let {
            _state.value = state.value.copy(selectedDate = it)
        }
    }

    fun getSelectedTimescale(): String {
        return state.value.timescale.name
    }

    private fun getDataPoints(): List<ChartData> {
        val random = Random
        if (state.value.selectedData == StatisticData.SOLAR) {
            val values = dummySolarData()
            return values.mapIndexed { index, d ->
                ChartData(index.toLong(), d)
            }
        }
        val now = Date().time
        return (0..31).map {
            ChartData(now + (86400000*it), (random.nextDouble(50.0)-random.nextDouble(50.0)))
        }
    }

    fun getBatteryCharge():List<ChartData> {
        return dummyBatteryCharge().mapIndexed { index, d ->
            ChartData(index.toLong(), d)
        }
    }

    fun getBatteryChargeDummy():List<ChartData> {
        return dummyBatteryCharge().filterIndexed { index, _ -> index%20==0 }.mapIndexed { index, d ->
            ChartData(index.toLong(), d)
        }
    }

}

private fun dummySolarData(): List<Double> {
    return listOf(
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        2.666666667,
        8.0,
        12.0,
        10.0,
        6.666666667,
        6.666666667,
        2.166666667,
        0.833333333,
        5.833333333,
        6.5,
        10.33333333,
        27.66666667,
        56.16666667,
        70.0,
        69.5,
        42.0,
        32.0,
        58.83333333,
        60.16666667,
        63.0,
        48.83333333,
        24.16666667,
        18.5,
        32.66666667,
        44.33333333,
        55.33333333,
        53.83333333,
        121.0,
        177.8333333,
        85.16666667,
        88.16666667,
        107.8333333,
        230.3333333,
        239.8333333,
        253.6666667,
        277.8333333,
        300.1666667,
        304.8333333,
        296.8333333,
        295.8333333,
        298.8333333,
        278.6666667,
        300.3333333,
        261.5,
        246.6666667,
        242.0,
        257.8333333,
        311.0,
        351.3333333,
        361.1666667,
        408.5,
        458.6666667,
        475.5,
        490.3333333,
        510.1666667,
        543.1666667,
        572.3333333,
        589.0,
        590.3333333,
        581.3333333,
        574.3333333,
        590.1666667,
        663.5,
        683.5,
        686.5,
        679.8333333,
        603.5,
        531.3333333,
        511.5,
        502.3333333,
        556.3333333,
        705.0,
        775.6666667,
        801.3333333,
        821.6666667,
        852.6666667,
        908.3333333,
        933.5,
        816.3333333,
        753.8333333,
        311.0,
        248.8333333,
        727.3333333,
        604.3333333,
        929.6666667,
        400.6666667,
        228.3333333,
        209.0,
        253.1666667,
        191.6666667,
        142.0,
        216.6666667,
        554.1666667,
        296.0,
        193.1666667,
        182.1666667,
        192.0,
        534.8333333,
        1116.666667,
        554.8333333,
        351.3333333,
        472.5,
        211.3333333,
        196.8333333,
        169.8333333,
        288.6666667,
        347.5,
        419.6666667,
        365.5,
        536.1666667,
        292.1666667,
        258.3333333,
        284.1666667,
        816.0,
        1327.333333,
        1402.166667,
        1485.333333,
        1460.166667,
        1506.333333,
        1543.0,
        1535.666667,
        1519.166667,
        1495.333333,
        1116.0,
        1373.666667,
        1322.833333,
        1180.166667,
        1188.333333,
        1125.666667,
        1335.0,
        1325.833333,
        1325.0,
        1304.666667,
        1268.0,
        1355.333333,
        724.8333333,
        1064.166667,
        1395.5,
        1389.0,
        1380.666667,
        1375.833333,
        1382.833333,
        1398.666667,
        1392.0,
        1413.833333,
        1455.0,
        1426.333333,
        1452.333333,
        1441.5,
        1452.333333,
        1430.166667,
        1400.666667,
        1435.5,
        1425.333333,
        1421.166667,
        1443.166667,
        1456.333333,
        1463.666667,
        1468.5,
        1455.0,
        1442.5,
        1438.5,
        981.8333333,
        285.0,
        300.6666667,
        386.1666667,
        923.6666667,
        1208.333333,
        1596.0,
        1124.166667,
        886.1666667,
        403.6666667,
        378.0,
        330.0,
        250.0,
        221.8333333,
        227.1666667,
        823.8333333,
        318.8333333,
        778.1666667,
        486.8333333,
        369.1666667,
        368.6666667,
        399.8333333,
        763.0,
        1590.0,
        1742.833333,
        1664.0,
        849.3333333,
        286.0,
        302.6666667,
        297.6666667,
        814.6666667,
        623.0,
        476.1666667,
        476.6666667,
        417.3333333,
        391.5,
        374.6666667,
        366.5,
        356.8333333,
        383.0,
        444.6666667,
        479.6666667,
        430.6666667,
        425.3333333,
        414.8333333,
        416.8333333,
        419.0,
        418.3333333,
        430.8333333,
        473.6666667,
        672.1666667,
        1669.666667,
        1393.5,
        786.5,
        380.0,
        378.0,
        342.1666667,
        300.8333333,
        302.3333333,
        317.5,
        319.6666667,
        316.8333333,
        300.6666667,
        293.8333333,
        291.8333333,
        303.6666667,
        347.5,
        458.0,
        579.5,
        1224.166667,
        2048.333333,
        2183.833333,
        2072.833333,
        1583.833333,
        1487.833333,
        737.0,
        1123.333333,
        1665.666667,
        1090.166667,
        335.1666667,
        367.0,
        364.5,
        372.1666667,
        377.8333333,
        400.3333333,
        447.1666667,
        518.5,
        1392.666667,
        920.3333333,
        1128.833333,
        302.6666667,
        293.5,
        314.3333333,
        648.5,
        1121.833333,
        683.0,
        1347.166667,
        1723.0,
        735.8333333,
        933.1666667,
        760.3333333,
        914.3333333,
        655.3333333,
        921.6666667,
        331.8333333,
        296.6666667,
        273.6666667,
        272.1666667,
        368.0,
        407.0,
        375.5,
        372.3333333,
        375.0,
        383.8333333,
        383.6666667,
        363.3333333,
        356.5,
        363.3333333,
        400.0,
        425.0,
        438.3333333,
        461.1666667,
        453.5,
        432.1666667,
        434.3333333,
        414.3333333,
        413.5,
        448.8333333,
        797.3333333,
        854.3333333,
        1392.666667,
        1000.666667,
        1275.333333,
        1724.0,
        1770.833333,
        1897.5,
        508.0,
        575.0,
        1965.833333,
        1503.0,
        1059.333333,
        943.8333333,
        1377.5,
        2020.833333,
        1247.666667,
        593.1666667,
        1271.333333,
        1306.5,
        1348.0,
        1358.166667,
        1292.833333,
        1165.166667,
        1070.833333,
        1381.333333,
        791.3333333,
        1353.5,
        1396.0,
        1405.5,
        1391.666667,
        1392.5,
        1399.833333,
        1436.5,
        1354.5,
        1421.666667,
        1385.5,
        1367.333333,
        1434.5,
        1402.5,
        1374.166667,
        1390.166667,
        763.0,
        885.1666667,
        421.0,
        291.0,
        279.8333333,
        274.1666667,
        274.1666667,
        277.5,
        288.5,
        304.8333333,
        309.8333333,
        313.8333333,
        395.3333333,
        1479.833333,
        1022.333333,
        1365.166667,
        1595.0,
        1345.166667,
        1709.166667,
        1658.666667,
        1645.0,
        1610.166667,
        1426.5,
        1377.666667,
        1381.833333,
        1268.166667,
        1328.5,
        1366.833333,
        1339.833333,
        1319.333333,
        1233.0,
        1141.833333,
        1235.166667,
        1255.666667,
        1200.666667,
        1158.0,
        1099.333333,
        1202.5,
        1155.0,
        1138.5,
        1039.833333,
        1197.0,
        1053.833333,
        1153.166667,
        1016.166667,
        1085.833333,
        861.6666667,
        1173.5,
        987.0,
        1090.333333,
        988.3333333,
        480.3333333,
        704.8333333,
        1090.666667,
        525.1666667,
        271.8333333,
        248.0,
        263.6666667,
        311.8333333,
        425.5,
        520.3333333,
        954.0,
        1095.666667,
        1054.666667,
        1046.166667,
        1029.166667,
        1032.333333,
        1010.333333,
        525.8333333,
        917.5,
        1003.5,
        676.5,
        476.6666667,
        400.6666667,
        393.8333333,
        473.0,
        497.0,
        492.1666667,
        562.0,
        1235.166667,
        502.8333333,
        494.5,
        535.5,
        281.5,
        363.0,
        452.6666667,
        442.1666667,
        721.8333333,
        536.3333333,
        514.3333333,
        464.5,
        473.0,
        1211.833333,
        1195.0,
        1333.0,
        1298.833333,
        839.6666667,
        1277.0,
        1245.5,
        1218.166667,
        1194.5,
        1187.666667,
        1184.0,
        1198.0,
        1225.666667,
        1218.666667,
        1167.333333,
        966.0,
        1209.5,
        1066.5,
        1079.333333,
        1177.333333,
        864.1666667,
        592.0,
        884.0,
        976.5,
        910.3333333,
        976.6666667,
        567.3333333,
        410.1666667,
        380.1666667,
        387.8333333,
        377.8333333,
        417.1666667,
        375.6666667,
        345.8333333,
        690.6666667,
        1229.0,
        996.6666667,
        598.8333333,
        875.3333333,
        1259.0,
        1225.5,
        1016.166667,
        903.8333333,
        1001.333333,
        982.3333333,
        1071.166667,
        909.6666667,
        561.5,
        730.0,
        804.6666667,
        831.8333333,
        589.8333333,
        715.3333333,
        844.5,
        700.6666667,
        337.0,
        278.0,
        248.8333333,
        241.3333333,
        313.1666667,
        429.5,
        447.5,
        831.3333333,
        662.0,
        577.6666667,
        1015.333333,
        1008.833333,
        1018.166667,
        811.3333333,
        502.3333333,
        401.8333333,
        359.6666667,
        356.6666667,
        358.6666667,
        375.1666667,
        597.6666667,
        397.6666667,
        528.0,
        557.6666667,
        779.3333333,
        1038.333333,
        958.3333333,
        655.6666667,
        619.3333333,
        786.1666667,
        803.5,
        793.5,
        786.6666667,
        827.3333333,
        833.6666667,
        801.5,
        748.1666667,
        694.1666667,
        628.0,
        579.3333333,
        778.1666667,
        778.5,
        791.0,
        812.0,
        879.8333333,
        876.0,
        843.6666667,
        716.3333333,
        383.0,
        548.0,
        695.1666667,
        812.0,
        807.0,
        771.3333333,
        721.5,
        700.1666667,
        683.3333333,
        726.5,
        768.5,
        776.1666667,
        774.6666667,
        767.3333333,
        721.6666667,
        666.6666667,
        403.1666667,
        464.5,
        384.8333333,
        177.0,
        154.8333333,
        164.5,
        448.0,
        468.8333333,
        469.6666667,
        468.5,
        459.8333333,
        422.8333333,
        365.0,
        273.5,
        232.8333333,
        221.1666667,
        202.0,
        182.6666667,
        170.8333333,
        122.1666667,
        117.3333333,
        112.1666667,
        109.5,
        113.3333333,
        113.1666667,
        194.1666667,
        258.3333333,
        255.5,
        110.3333333,
        112.5,
        110.5,
        118.1666667,
        133.6666667,
        245.3333333,
        214.1666667,
        276.8333333,
        294.6666667,
        252.8333333,
        170.3333333,
        219.3333333,
        248.0,
        228.8333333,
        234.5,
        227.3333333,
        225.1666667,
        202.5,
        193.5,
        189.3333333,
        175.5,
        185.5,
        181.6666667,
        170.6666667,
        170.5,
        158.6666667,
        148.0,
        147.6666667,
        139.6666667,
        137.5,
        142.0,
        132.1666667,
        113.3333333,
        116.1666667,
        115.6666667,
        111.3333333,
        111.6666667,
        110.3333333,
        80.83333333,
        59.66666667,
        47.0,
        53.5,
        70.83333333,
        65.66666667,
        61.33333333,
        45.16666667,
        50.66666667,
        48.33333333,
        45.5,
        31.16666667,
        18.5,
        26.16666667,
        22.33333333,
        14.33333333,
        18.66666667,
        15.5,
        13.5,
        9.666666667,
        9.833333333,
        8.0,
        6.166666667,
        5.166666667,
        6.666666667,
        7.166666667,
        8.833333333,
        5.833333333,
        8.166666667,
        8.833333333,
        8.333333333,
        8.333333333,
        6.333333333,
        8.333333333,
        7.0,
        6.666666667,
        10.5,
        6.666666667,
        4.166666667,
        2.333333333,
        3.0,
        1.666666667,
        1.5,
        1.166666667,
        0.0,
        1.166666667,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    )
}

private fun dummyBatteryCharge(): List<Double> {
    return listOf(
        81.98,
        81.80,
        79.90,
        78.15,
        76.77,
        75.38,
        74.45,
        73.44,
        72.80,
        72.05,
        71.31,
        71.04,
        70.18,
        69.85,
        69.40,
        68.73,
        68.42,
        68.0 ,
        67.60,
        67.36,
        66.68,
        66.60,
        66.22,
        65.70,
        65.19,
        64.27,
        63.86,
        63.37,
        62.91,
        62.50,
        62.0 ,
        62.69,
        61.78,
        61.3 ,
        61.18,
        61.41,
        61.24,
        61.36,
        61.55,
        61.88,
        63.55,
        64.37,
        66.13,
        66.95,
        68.03,
        65.55,
        66.50,
        67.2 ,
        78.75,
        80.58,
        84.44,
        89.03,
        87.42,
        80.12,
        74.55,
        85.14,
        80.85,
        82.55,
        76.31,
        83.29,
        89.63,
        87.86,
        90.88,
        88.34,
        84.72,
        88.16,
        93.87,
        94.73,
        95.23,
        95.32,
        92.82,
        96.93,
        97.38,
        97.6 ,
        97.58,
        96.71,
        97.70,
        96.54,
        96.37,
        97.93,
        97.95,
        97.0 ,
        96.75,
        98.08,
        96.96,
        97.40,
        97.11,
        97.83,
        97.0 ,
        97.39,
        97.38,
        96.45,
        95.6 ,
        94.90,
        95.06,
        94.27,
        93.7 ,
        93.44,
        92.68,
        91.0 ,
        90.27,
        90.50,
        90.26,
        90.05,
        89.98,
        88.67,
        87.55,
        86.52,
        85.14,
        84.0 ,
        81.65,
        80.10,
        78.68,
        77.26,
        75.67,
        74.53,
        73.42,
        72.72,
        71.55,
        71.13,
        70.22,
        69.7 ,
        69.03,
        68.55,
        68.13,
        67.50,
        67.09,
        65.93,
        65.65,
        65.86,
        65.44,
        65.08,
        64.62,
        64.11,
        63.52,
        63.14,
        63.06,
        62.40,
        62.45,
        62.17,
        61.45,
        61.19,
        60.65,
        60.08,
    )
}